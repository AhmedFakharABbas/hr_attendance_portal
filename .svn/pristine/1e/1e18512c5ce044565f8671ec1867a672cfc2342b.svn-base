import { Component, OnInit, Input, ViewChild } from "@angular/core";
import { FormControl, Validators } from "@angular/forms";
import { MatSort } from "@angular/material/sort";
import { MatTableDataSource } from "@angular/material/table";
import { CorrectionStatus } from "../../../shared/interfaces/correction-status";
import { EmployeeGrievance } from "../../../shared/interfaces/employee grievance";

import { GrievanceService } from "../grievance.service";
const APPLICATIONS_DATA: any[] = [
  // {
  //   id: 132,
  //   name: "Jack reacher",
  //   grievanceAgainst: "Miller",
  //   grievanceAgainstId: 32423,
  //   applicationDate: "25-Nov-2020",
  //   type: "Grievance",
  //   from: "25-Nov-2020",
  //   to: "25-Nov-2020",
  //   status: "Approved",
  // },
  // {
  //   id: 132,
  //   name: "Jack reacher",
  //   grievanceAgainst: "Miller",
  //   grievanceAgainstId: 32423,
  //   applicationDate: "25-Nov-2020",
  //   type: "Grievance",
  //   from: "25-Nov-2020",
  //   to: "25-Nov-2020",
  //   status: "Pending",
  // },
  // {
  //   id: 132,
  //   name: "Jack reacher",
  //   grievanceAgainst: "Miller",
  //   grievanceAgainstId: 32423,
  //   applicationDate: "25-Nov-2020",
  //   type: "Grievance",
  //   from: "25-Nov-2020",
  //   to: "25-Nov-2020",
  //   status: "Pending",
  // },
  // {
  //   id: 132,
  //   name: "Jack reacher",
  //   grievanceAgainst: "Miller",
  //   grievanceAgainstId: 32423,
  //   applicationDate: "25-Nov-2020",
  //   type: "Grievance",
  //   from: "25-Nov-2020",
  //   to: "25-Nov-2020",
  //   status: "Approved",
  // },
];
const STATUS_DATA: CorrectionStatus[] = [
  // {
  //   month: "January",
  //   corrections: "21",
  //   approved: "4",
  //   pending: "0",
  //   rejected: "8",
  // },
  // {
  //   month: "February",
  //   corrections: "8",
  //   approved: "1.5",
  //   pending: "5",
  //   rejected: "8",
  // },
  // {
  //   month: "March",
  //   corrections: "8",
  //   approved: "2.25",
  //   pending: "0",
  //   rejected: "0",
  // },
  // {
  //   month: "April",
  //   corrections: "15",
  //   approved: "0",
  //   pending: "0",
  //   rejected: "0",
  // },
  // {
  //   month: "May",
  //   corrections: "-",
  //   approved: "0",
  //   pending: "0",
  //   rejected: "5",
  // },
  // {
  //   month: "June",
  //   corrections: "-",
  //   approved: "1",
  //   pending: "5",
  //   rejected: "5",
  // },
  // {
  //   month: "July",
  //   corrections: "-",
  //   approved: "0",
  //   pending: "5",
  //   rejected: "5",
  // },
  // {
  //   month: "Auguest",
  //   corrections: "8",
  //   approved: "5",
  //   pending: "0",
  //   rejected: "0",
  // },
  // {
  //   month: "September",
  //   corrections: "8",
  //   approved: "0",
  //   pending: "0",
  //   rejected: "0",
  // },
  // {
  //   month: "October",
  //   corrections: "15",
  //   approved: "8",
  //   pending: "0",
  //   rejected: "0",
  // },
  // {
  //   month: "November",
  //   corrections: "8",
  //   approved: "0",
  //   pending: "2",
  //   rejected: "2",
  // },
  // {
  //   month: "December",
  //   corrections: "8",
  //   approved: "0",
  //   pending: "2",
  //   rejected: "2",
  // },
];
let f: any[] = [];
@Component({
  selector: "app-grievance-table",
  templateUrl: "./grievance-table.component.html",
  styleUrls: ["./grievance-table.component.css"],
})
export class GrievanceTableComponent implements OnInit {
  constructor(private _grievanceService: GrievanceService) {}
  status = new FormControl();
  employeeNameFilter = new FormControl();

  @Input() applicationType;
  selectedValue: string;
  selectedCar: string;
  @ViewChild(MatSort) sort: MatSort;

  //tatusColumns: string[] = ['employeeId','employeeName', 'grievanceAgainstName', 'applicationDate', 'type', 'from', 'to', 'status'];

  //applicationColums: string[] = ['id','name', 'grievanceAgainst', 'applicationDate', 'type', 'from', 'to', 'status'];

  columnsToDisplay: string[];
  dataSource = new MatTableDataSource();
  tableURL: string;
  allApplications: any;

  ngOnInit(): void {

    this.getMetaData();

    this.status.valueChanges.subscribe((value) => {
      this.statusFilterChange(value);
    });
    this.employeeNameFilter.valueChanges.subscribe((value) => {
      this.employeeNameFilterChange(value);
    });
    this._grievanceService.PostRequestData.subscribe((postUrl) => {
      //rowData.application_date

      if (postUrl != "") {
        this.dataSource = new MatTableDataSource();
        this.getMetaData();
        // this.totalTableLength = undefined;
        // this.caURL = undefined;
        // this.onGetMetaData();
      }
    });
  }
  getMetaData() {
    if (this.applicationType.type == "Emp-portal") {
      this.getEmployeePortalData();
    } else if (this.applicationType.type == "hrPortalEnquiries") {
      this.getHrEnquires();
    } else if (this.applicationType.type == "lmPortalEnquiries"||this.applicationType.type == "lmPortalPersonalApplications") {
      this.getLmEnquires();
    }

  }
  getEmployeePortalData() {
    this.tableURL =  "/grievance/applications";
    this.columnsToDisplay = [
      "application_id",
      "issue_raised_against_employee",
      "against_employee_name",
      "create_at",
      "from_date",
      "to_date",

      "application_status",
    ];
    this.getGrievanceApplicaitonsData(
      "/grievance/applications"
    );
    // let columns=this.applicationColums.splice(1,1)
    // console.log(columns);
    // this.columnsToDisplay=[...this.applicationColums]
  }
  getHrEnquires() {
    this.tableURL = "/get_hr_enquiries_list";
    this.columnsToDisplay = [

      "employee_id",
      "complaiant_name",
      "create_at",
      "type",
      "from_date",
      "to_date",
      "lm_status",
    ];
    this.getGrievanceApplicaitonsData("/get_hr_enquiries_list");
  }
  getLmEnquires() {
    this.tableURL =  "/grievance/applications";
    this.columnsToDisplay = [
      "application_id",
      "issue_raised_against_employee",
      "against_employee_name",
      "create_at",
      "from_date",
      "to_date",
      "application_type",
      "application_status",
    ];
    this.getGrievanceApplicaitonsData(
      "/grievance/applications"
    );
  }

  getGrievanceApplicaitonsData(url) {
    this.dataSource = new MatTableDataSource();
    this._grievanceService.getData(url).subscribe({
      next: (res: any) => {

        if(this.applicationType.type == "lmPortalEnquiries"){
          let serverData = res[0];
          res.data.assigned_applications.forEach(application => {
           application.against_employee_name= application.issue_raised_against_employee!=null?application.issue_raised_against_employee.name:"-"
           application.application_type='Assigned'
          });
          res.data.lm_applications.forEach(application => {
            application.against_employee_name= application.issue_raised_against_employee!=null?application.issue_raised_against_employee.name:"-"
            application.application_type='Submitted'
           });
           let resData=[...res.data.assigned_applications, ...res.data.lm_applications,]


          resData.sort(this.dynamicSort('application_id'));
           this.dataSource.data = this.dataSource.data.concat(
            resData
           );
           this.dataSource.sort = this.sort;

        }
        else if(this.applicationType.type == "Emp-portal"){
          let serverData = res[0];
          res.data.forEach(application => {
           application.against_employee_name= application.issue_raised_against_employee!=null?application.issue_raised_against_employee.name:"-"
           console.log(application);
          });
           this.dataSource.data = this.dataSource.data.concat(
             res.data
           );
           this.dataSource.sort = this.sort;

        }
        // else if(this.applicationType.type == "lmPortalPersonalApplications"){



        //   let serverData = res[0];
        //   res.data.lm_applications.forEach(application => {
        //    application.against_employee_name= application.issue_raised_against_employee!=null?application.issue_raised_against_employee.name:"-"
        //    console.log(application);
        //   });
        //    this.dataSource.data = this.dataSource.data.concat(
        //     res.data.lm_applications
        //    );
        //    this.dataSource.sort = this.sort;

        // }
      },
      error: (error) => {},
    });
  }
  dynamicSort(property) {
    return function(a, b) {
        return (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
    }}
  //on scroll event
  onTableScroll(e) {
    // const tableViewHeight = e.target.offsetHeight; // viewport: ~500px
    // const tableScrollHeight = e.target.scrollHeight; // length of all table
    // const scrollLocation = e.target.scrollTop; // how far user scrolled

    // // If the user has scrolled within 200px of the bottom, add more data
    // const buffer = 200;
    // const limit = tableScrollHeight - tableViewHeight - buffer;
    // if (scrollLocation > limit) {
    //   this.getGrievanceApplicaitonsData(this.tableURL);
    // }
  }

  statusFilterChange(value) {
    if (value != undefined && value.length >= 1) {
      if (value == "Approved") {

        this.dataSource = new MatTableDataSource();
        this.tableURL =
          this.applicationType.type == "Emp-portal"
            ? "/get_grievance_applicaitons&status=approved"
            : this.applicationType.type == "hrPortalEnquiries"
            ? "/get_grievance_applicaitons&status=approved"
            : "/get_grievance_applicaitons&status=approved";

        this.getGrievanceApplicaitonsData(this.tableURL);
      } else if (value == "Disapproved") {

        this.dataSource = new MatTableDataSource();
        // this.tableURL="/get_grievance_applicaitons&status=disapproved";
        this.tableURL =
          this.applicationType.type == "Emp-portal"
            ? "/get_grievance_applicaitons&status=disapproved"
            : this.applicationType.type == "hrPortalEnquiries"
            ? "/get_grievance_applicaitons&status=disapproved"
            : "/get_grievance_applicaitons&status=disapproved";

        this.getGrievanceApplicaitonsData(this.tableURL);
      } else if (value == "Pending") {

        this.dataSource = new MatTableDataSource();
        // this.tableURL="/get_grievance_applicaitons&status=pending";
        this.tableURL =
          this.applicationType.type == "Emp-portal"
            ? "/get_grievance_applicaitons&status=pending"
            : this.applicationType.type == "hrPortalEnquiries"
            ? "/get_grievance_applicaitons&status=pending"
            : "/get_grievance_applicaitons&status=pending";
        this.getGrievanceApplicaitonsData(this.tableURL);

      } else {

        this.dataSource = new MatTableDataSource();
        this.getMetaData();
      }
    } else {
      return null;
    }
  }
  employeeNameFilterChange(value) {
    if (value != undefined && value.length >= 1) {
      //logic
    } else {
      return null;
    }
  }
  onRowClick(data: any){
    data.componentType = this.applicationType.type;
    this._grievanceService.setRowData(data);
  }
}
